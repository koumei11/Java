commons-langの使い方
1.ダウンロードページから以下をダウンロード
https://gyazo.com/bc0320a359b274c7dccde96652d57f30
2.ダウンロードしたフォルダからcommons-lang(version).jarファイルを適当にフォルダなどを作って配置
3.jarファイルを右クリックして「ビルドパス」→「ビルドパスの追加」を押すと参照ライブラリーが自動生成される。使いたいファイルでimport(ex. import org.apache.commons.lang3.StringUtils)

サーブレットはそもそもWebサーバーでは実行することができない。
サーブレットをサーブレットコンテナというところで動かすことによって、サーバーサイドでJavaプログラムを実行する。
Javaファイルを受け取ったWebサーバーはサーブレットコンテナに解析をお願いしてサーブレットコンテナは解析がし終わったらWebサーバーに返す。
この2つのサーバーの機能を兼ね備えたものがアプリケーションサーバーと言われるもので代表的なものにTomcatがある。
サーブレットの始め方
1.tomcatをダウンロード(https://gyazo.com/ac83cb74bcb2058de96c3a12edf40e76)
2.ダウンロードしたものを適当な場所に置く(今はアプリケーションからeclipseを右クリックして「パッケージの内容を表示」を押した所のContentsフォルダとどう階層の場所に置いてある)
3.下のコンソールのところでサーバーのタブを選択(なければ「ウィンドウ」→「ビューの表示」→「サーバー」)
4.使用可能なサーバーがなければリンクをクリックして新規サーバーを作成
5.ポップアップ内でtomcatサーバーの場所を指定(今回は2の場所)
6.下のウィンドウでサーバーが作成されたことが確認できたらパケージエクスプローラーの適当な場所を右クリック
7.新規→その他からWebフォルダの中にある動的webプロジェクトを選択。名前をつけて完了する。するとプロジェクトが作成される(Serversというフォルダも一緒に作成されるがこれはTomcatを構成するフォルダ)
8.完成したプロジェクトを右クリック→新規→サーブレットでパッケージ名とclass名をつけてサーブレットclassを作成する
9.この段階でエラーになった場合はビルドパスが追加されていないのでプロジェクトを右クリック→ビルドパス→ビルドパスの構成からライブラリタブを選んでクラスパス配下にライブラリを追加する。この時ライブラリの種類はサーバーランタイム選択してApacheを選ぶ
10.ここまでの段階ではどのJavaアプリ(Javaプロジェクト)を実行するのかわかっていない状態なので下のサーバーをクリック→追加および除去→作成したServletのプロジェクトを追加→完了
11.下のサーバーを右クリックして開始する
12.http://サーバ名/プロジェクト名/URLパターン でアクセス。Tomcatは8080ポートを使用しているのでサーバー名の箇所はlocalhost:8080。URLパターンはサーブレットクラスに書いてある@WebServletの後ろの部分
13.実際これでブラウザからアクセスするとそのURLパターンのファイルのdoGetに処理が入る
https://gyazo.com/9b4b2331473800b99b8ecca3fc2fafea
https://gyazo.com/51888f4c918dfd6323902234e8883256
SpringBootメモ
DIとはnewをしなくてもアノテーションのみでclassをinstance化する仕組み
MySQLなどspring bootで使用する場合はMaven repositoryのサイトでmysql connectorを検索してそこのMavenタブに書いてあるものをpom.xmlのdependenciesの中に追記する